{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { ShoppingListService } from '../shopping-list/shopping-list.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shopping-list/shopping-list.service\";\nvar RecipeService = /** @class */function () {\n  function RecipeService(slService) {\n    this.slService = slService;\n    this.recipesChanged = new Subject();\n    // private recipes: Recipe[] = [\n    //   new Recipe(\n    //     'Tasty Schnitzel',\n    //     'A super-tasty Schnitzel - just awesome!',\n    //     'https://upload.wikimedia.org/wikipedia/commons/7/72/Schnitzel.JPG',\n    //     [new Ingredient('Meat', 1), new Ingredient('French Fries', 20)]\n    //   ),\n    //   new Recipe(\n    //     'Big Fat Burger',\n    //     'What else you need to say?',\n    //     'https://upload.wikimedia.org/wikipedia/commons/b/be/Burger_King_Angus_Bacon_%26_Cheese_Steak_Burger.jpg',\n    //     [new Ingredient('Buns', 2), new Ingredient('Meat', 1)]\n    //   )\n    // ];\n    this.recipes = [];\n  }\n  RecipeService.prototype.setRecipes = function (recipes) {\n    this.recipes = recipes;\n    this.recipesChanged.next(this.recipes.slice());\n  };\n  RecipeService.prototype.getRecipes = function () {\n    return this.recipes.slice();\n  };\n  RecipeService.prototype.getRecipe = function (index) {\n    return this.recipes[index];\n  };\n  RecipeService.prototype.addIngredientsToShoppingList = function (ingredients) {\n    this.slService.addIngredients(ingredients);\n  };\n  RecipeService.prototype.addRecipe = function (recipe) {\n    this.recipes.push(recipe);\n    this.recipesChanged.next(this.recipes.slice());\n  };\n  RecipeService.prototype.updateRecipe = function (index, newRecipe) {\n    this.recipes[index] = newRecipe;\n    this.recipesChanged.next(this.recipes.slice());\n  };\n  RecipeService.prototype.deleteRecipe = function (index) {\n    this.recipes.splice(index, 1);\n    this.recipesChanged.next(this.recipes.slice());\n  };\n  RecipeService.ɵfac = function RecipeService_Factory(t) {\n    return new (t || RecipeService)(i0.ɵɵinject(i1.ShoppingListService));\n  };\n  RecipeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RecipeService,\n    factory: RecipeService.ɵfac\n  });\n  return RecipeService;\n}();\nexport { RecipeService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}