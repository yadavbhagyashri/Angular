{"ast":null,"code":"import { HttpRequest, HttpHandler, HttpParams } from '@angular/common/http';\nimport { take, exhaustMap } from 'rxjs/operators';\nimport { AuthService } from './auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nvar AuthInterceptorService = /** @class */function () {\n  function AuthInterceptorService(authService) {\n    this.authService = authService;\n  }\n  AuthInterceptorService.prototype.intercept = function (req, next) {\n    return this.authService.user.pipe(take(1), exhaustMap(function (user) {\n      if (!user) {\n        return next.handle(req);\n      }\n      var modifiedReq = req.clone({\n        params: new HttpParams().set('auth', user.token)\n      });\n      return next.handle(modifiedReq);\n    }));\n  };\n  AuthInterceptorService.ɵfac = function AuthInterceptorService_Factory(t) {\n    return new (t || AuthInterceptorService)(i0.ɵɵinject(i1.AuthService));\n  };\n  AuthInterceptorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthInterceptorService,\n    factory: AuthInterceptorService.ɵfac\n  });\n  return AuthInterceptorService;\n}();\nexport { AuthInterceptorService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}